{"version":3,"sources":["api/api.js","component/AbilityCard/AbilityCard.jsx","component/PokemonCard/PokemonCard.jsx","component/PokemonList/PokemoList.jsx","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","request","baseUrl","path","a","fetch","response","json","pockemonList","results","getPokemonImgUrl","id","getPokemonByName","name","AbilityCard","imgUrl","pokemonStats","pokemonName","types","weight","moves","stats","findStat","statName","find","stat","console","log","src","alt","className","map","type","base_stat","length","PokemonCard","loadPokemonByName","loadImgUrl","getPokemonStats","isVisibleAbilityCard","useState","pokemon","setPokemon","useEffect","onClick","e","onClickHandler","classname","PokemonList","pokemonList","setPokemonList","visibleStatus","setVisibleStatus","setTmgUrl","setPokemnStats","loadPokemonFromServer","pokemonFromServer","callback","status","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03d8853b.chunk.js","sourcesContent":["const BASE_URL = 'https://pokeapi.co/api/v2/pokemon/';\nconst IMG_URL = 'https://pokeres.bastionbot.org/images/pokemon/';\nconst TYPE_URL = 'https://pokeapi.co/api/v2/type';\n\nconst request = async(baseUrl, path) => {\n  const response = await fetch(`${baseUrl}${path}`);\n\n  const pockemonList = await response.json();\n\n  return pockemonList.results;\n}\n\nexport const getIdFromUrl  = async(url) => {\n  const response = await fetch(url);\n\n  const result = await response.json();\n\n  return result.results;\n}\nexport const getPokemonWithLimit = (limit) => request(BASE_URL,`?limit=${limit}`);\nexport const getPokemonImgUrl = (id) => `${IMG_URL}${id}.png`;\nexport const getPokemonType = (id) => request(TYPE_URL, id);\nexport const getPokemonByName = async(name) => {\n  const response = await fetch(`${BASE_URL}${name}`);\n\n  return response.json()\n};","import React from 'react';\nimport './abilityCard.scss';\n\nexport const AbilityCard = ({ imgUrl, pokemonName, pokemonStats }) => {\n  const {\n    name,\n    types,\n    weight,\n    moves,\n    stats,\n  } = pokemonStats;\n\n  const findStat = (statName) => {\n    return stats.find(stat => stat.stat.name === statName);\n  }\n\n  console.log(findStat('attack'));\n\n  return (\n  <div>\n    <img\n      src={imgUrl}\n      alt=\"pokemon\"\n      className=\"abilityCard__img\"\n    />\n    <strong>{name}</strong>\n    <table>\n      <tr>\n        <td>Type</td>\n        <td>{types.map(type => (\n          <span>{type.type.name}</span>\n        ))}</td>\n      </tr>\n      <tr>\n        <td>Attack</td>\n        <td>{findStat('attack').base_stat}</td>\n      </tr>\n      <tr>\n        <td>Defense</td>\n        <td>{findStat('defense').base_stat}</td>\n      </tr>\n      <tr>\n        <td>HP</td>\n        <td>{findStat('hp').base_stat}</td>\n      </tr>\n      <tr>\n        <td>SP Attack</td>\n        <td>{findStat('special-attack').base_stat}</td>\n      </tr>\n      <tr>\n        <td>SP Defense</td>\n        <td>{findStat('defense').base_stat}</td>\n      </tr>\n      <tr>\n        <td>Spead</td>\n        <td>{findStat('speed').base_stat}</td>\n      </tr>\n      <tr>\n        <td>Weight</td>\n        <td>{weight}</td>\n      </tr>\n      <tr>\n        <td>Total Moves</td>\n        <td>{moves.length}</td>\n      </tr>\n\n    </table>\n  </div>);\n}","import React, { useEffect, useState } from 'react';\nimport { getPokemonImgUrl } from '../../api/api';\nimport classname from 'classnames'\nimport './pokemon__card.scss';\n\nexport const PokemonCard = ({\n  name,\n  loadPokemonByName,\n  loadImgUrl,\n  getPokemonStats,\n  isVisibleAbilityCard,\n}) => {\n  const [pokemon, setPokemon] = useState(null);\n\n  useEffect(() => {\n    loadPokemonByName(name, setPokemon);\n  }, [name, loadPokemonByName]);\n\n  const onClickHandler = (pokemon, e) => {\n    isVisibleAbilityCard(true);\n    loadImgUrl(pokemon.id);\n\n    const {\n      name,\n      types,\n      weight,\n      moves,\n      stats,\n    } = pokemon;\n\n    getPokemonStats({\n      name,\n      types,\n      weight,\n      moves,\n      stats,\n    })\n  }\n\n  return (\n    <div\n      className=\"pokemon_card\"\n      onClick={(e) => (onClickHandler(pokemon, e))}\n    >\n      {(pokemon)\n        ?\n        ( <>\n            <img\n              className=\"pokemon_card__img\"\n              src={getPokemonImgUrl(pokemon.id)}\n              alt={`${pokemon.name}`}\n            />\n            <span\n              className=\"pokemon_card__name\">\n              {pokemon.name}\n            </span>\n            <div className=\"pokemon_card__type\">\n              {pokemon.types.map(type => (\n                <span\n                  className={classname('pokemon_card__type_name', type.type.name, {\n                    'pokemon_card__type_name--fire': type.type.name === 'fire',\n                    'pokemon_card__type_name--poison': type.type.name === 'poison',\n                    'pokemon_card__type_name--grass': type.type.name === 'grass',\n                    'pokemon_card__type_name--water': type.type.name === 'water',\n                    'pokemon_card__type_name--electic': type.type.name === 'electric',\n                    'pokemon_card__type_name--fairy' : type.type.name === 'fairy',\n                    'pokemon_card__type_name--normal' : type.type.name === 'normal',\n                    'pokemon_card__type_name--flying' : type.type.name === 'flying',\n                    'pokemon_card__type_name--bug' : type.type.name === 'bug',\n                    'pokemon_card__type_name--ground' : type.type.name === 'ground',\n                    'pokemon_card__type_name--fighting' : type.type.name === 'fighting',\n                    'pokemon_card__type_name--psychic' : type.type.name === 'psychic',\n                  })}>\n                    {type.type.name}\n                  </span>\n              ))}\n            </div>\n          </>\n        )\n        : (`Loading....`) }\n    </div>\n  )\n}","import React, { useEffect, useState } from 'react';\nimport { getPokemonWithLimit, getPokemonByName, getPokemonImgUrl } from '../../api/api';\nimport { AbilityCard } from '../AbilityCard/';\nimport { PokemonCard } from '../PokemonCard';\nimport './pokemon_list.scss'\n\nexport const PokemonList = () => {\n  const [pokemonList, setPokemonList] = useState([]);\n  const [visibleStatus, setVisibleStatus] = useState(false);\n  const [imgUrl, setTmgUrl] = useState('');\n  const [pokemonStats, setPokemnStats] = useState(null)\n\n  const loadPokemonFromServer = async() => {\n    const pokemonFromServer = await getPokemonWithLimit(12);\n\n    setPokemonList(pokemonFromServer);\n  }\n\n  const loadPokemonByName = async(name, callback) => {\n    const response = await getPokemonByName(name);\n\n    callback(response);\n  }\n\n  const isVisibleAbilityCard = (status) => {\n    setVisibleStatus(true);\n  }\n\n  const loadImgUrl = (imgUrl) => {\n    setTmgUrl(getPokemonImgUrl(imgUrl));\n  }\n\n  const getPokemonStats = (stats) => {\n    setPokemnStats(stats);\n  }\n\n  useEffect(() => {\n    loadPokemonFromServer();\n  }, [])\n\n  return (\n    <>\n      <div className=\"pokemon_list\">{pokemonList.map(pokemon => (\n        <PokemonCard\n          name={pokemon.name}\n          loadPokemonByName={loadPokemonByName}\n          isVisibleAbilityCard={isVisibleAbilityCard}\n          loadImgUrl={loadImgUrl}\n          getPokemonStats={getPokemonStats}\n        />\n        ))}\n      </div>\n      <div>\n        {(visibleStatus)\n         ? (<AbilityCard\n              imgUrl={imgUrl}\n              pokemonStats={pokemonStats}\n         />)\n         : (<div></div>)\n         }\n      </div>\n    </>\n  );\n}","import { PokemonList } from './component/PokemonList'\nimport './App.scss';\n\n\nexport const App = () => {\n  return (\n    <main className=\"app\">\n      <h1 className=\"app__title\">Pokedex</h1>\n      <div className=\"app__body\">\n        <PokemonList />\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport  { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}